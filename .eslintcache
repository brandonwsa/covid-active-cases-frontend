[{"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx":"1","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts":"2","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx":"3","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx":"4","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":609,"mtime":1611725972876,"results":"9","hashOfConfig":"7"},{"size":729,"mtime":1611692208403,"results":"10","hashOfConfig":"7"},{"size":3311,"mtime":1611726041872,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ezhv2q",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx",[],["24","25"],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx",["26","27"],"import react from 'react';\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n    <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">Active Cases</a>\r\n        <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    </header>\r\n    );\r\n};\r\n\r\nexport default Nav;","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":7,"column":9,"nodeType":"40","endLine":7,"endColumn":74},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":52,"column":19,"nodeType":"43","messageId":"44","endLine":52,"endColumn":21},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]