[{"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx":"1","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts":"2","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx":"3","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx":"4","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx":"5","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Chart.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":642,"mtime":1611728329440,"results":"10","hashOfConfig":"8"},{"size":729,"mtime":1611692208403,"results":"11","hashOfConfig":"8"},{"size":3311,"mtime":1611726041872,"results":"12","hashOfConfig":"8"},{"size":976,"mtime":1611728214987,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ezhv2q",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx",[],["29","30"],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx",["31","32"],"import react from 'react';\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n    <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">Active Cases</a>\r\n        <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    </header>\r\n    );\r\n};\r\n\r\nexport default Nav;","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx",["33","34"],"import react, { useEffect, useState } from 'react';\r\nimport {Case} from \"../interfaces/case\"\r\n\r\nconst Cases = () => {\r\n    //illinois 2019 population\r\n    const ILpopulation:number = 12670000;\r\n\r\n    //cases in the past two weeks\r\n    //will most likely use outside of this file.\r\n    let pastCases: { state:string, date:number, positiveIncrease:number }[] = [];\r\n\r\n    //used to monitor active cases\r\n    let totalActiveCases:number = 0;\r\n\r\n    //get date from two weeks ago\r\n    let twoWeeksAgo = new Date(Date.now() - 12096e5);\r\n\r\n    //get the year month and day of date\r\n    let year = twoWeeksAgo.getFullYear();\r\n    let month = twoWeeksAgo.getMonth() + 1;\r\n    let day = twoWeeksAgo.getDate();\r\n\r\n    //convert year month day into string to get proper date then back to a number.\r\n    //also adds 0 infront of month\r\n    let date:number = +(\"\"+year+\"0\"+month+\"\"+day);\r\n    \r\n\r\n\r\n    const [cases, setCases] = useState([])\r\n\r\n    //get the cases with async\r\n    useEffect(() => {\r\n        const getCases = async () => {\r\n            const url: string = \"https://api.covidtracking.com/v1/states/il/daily.json\";\r\n\r\n            const response = await fetch(url);\r\n\r\n            const data = await response.json();\r\n\r\n            setCases(data);\r\n\r\n            \r\n\r\n        };\r\n\r\n        getCases();\r\n\r\n    }, []);\r\n\r\n    //make an array with the pastCases from two weeks.\r\n    cases.map(\r\n        (c: Case) => {\r\n            if (c.date >= date){\r\n                let singleCase = {\r\n                    state: c.state,\r\n                    date: c.date,\r\n                    positiveIncrease: c.positiveIncrease\r\n                };\r\n\r\n                pastCases.push(singleCase);\r\n\r\n                //add case positiveIncrease to totalActiceCases.\r\n                totalActiveCases = totalActiveCases + c.positiveIncrease;\r\n\r\n            }\r\n        }\r\n    )\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h2>Total recorded active cases, include propable cases: {totalActiveCases}</h2>\r\n            <h2>Percentage of recorded active cases based on Illinois 2019 population, including propable cases: {(totalActiveCases / ILpopulation)*100+\"%\"}</h2>\r\n            <br />\r\n            <div className=\"table-responsive\">\r\n                <h2>Past reported live positive cases spanning back two weeks:</h2>\r\n                <table className=\"table table-striped table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>State</th>\r\n                            <th>Date</th>\r\n                            <th>New Positive Cases Recorded</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {pastCases.map(\r\n                            (c: Case) => {\r\n                                return (\r\n                                    <tr key={c.date}>\r\n                                        <td>{c.state}</td>\r\n                                        <td>{c.date}</td>\r\n                                        <td>{c.positiveIncrease}</td>\r\n                                    </tr>\r\n                                );\r\n                            }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cases;","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Chart.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":7,"column":9,"nodeType":"45","endLine":7,"endColumn":74},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":52,"column":19,"nodeType":"48","messageId":"49","endLine":52,"endColumn":21},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]