[{"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx":"1","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts":"2","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx":"3","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx":"4","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx":"5","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Chart.tsx":"6","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Dropdown.tsx":"7","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\contexts\\stateContext.tsx":"8","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\EmptyChart.tsx":"9","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\DateFormatter.tsx":"10","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\NumberFormatter.tsx":"11","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\remainderFinder.tsx":"12","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\MakeDate.tsx":"13","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\CalcTotalCases.tsx":"14","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\SelectCases.tsx":"15","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\CalcPastPercentages.tsx":"16","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\PercentChart.tsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1110,"mtime":1615351225605,"results":"21","hashOfConfig":"19"},{"size":407,"mtime":1613965965087,"results":"22","hashOfConfig":"19"},{"size":10881,"mtime":1615844990651,"results":"23","hashOfConfig":"19"},{"size":5028,"mtime":1615351225606,"results":"24","hashOfConfig":"19"},{"size":3991,"mtime":1615351225607,"results":"25","hashOfConfig":"19"},{"size":1070,"mtime":1612253970383,"results":"26","hashOfConfig":"19"},{"size":1539,"mtime":1612852512603,"results":"27","hashOfConfig":"19"},{"size":1213,"mtime":1615351225609,"results":"28","hashOfConfig":"19"},{"size":1022,"mtime":1612946898514,"results":"29","hashOfConfig":"19"},{"size":365,"mtime":1612942508189,"results":"30","hashOfConfig":"19"},{"size":1161,"mtime":1615844033592,"results":"31","hashOfConfig":"19"},{"size":676,"mtime":1615351225608,"results":"32","hashOfConfig":"19"},{"size":2099,"mtime":1615844186322,"results":"33","hashOfConfig":"19"},{"size":1540,"mtime":1615351225608,"results":"34","hashOfConfig":"19"},{"size":2863,"mtime":1615351225607,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ezhv2q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\index.tsx",[],["74","75"],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\reportWebVitals.ts",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\App.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Nav.tsx",["76","77"],"/**\r\n * top navigation bar\r\n */\r\n\r\nconst Nav = () => {\r\n    return (\r\n    <header className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a className=\"navbar-brand me-0 px-3\" href=\"javascript:void(0)\">COVID-19 Active Cases</a>\r\n        <a className=\"portfolio me-0 px-3\" href=\"https://brandonwsa.github.io/\">My Portfolio</a>\r\n\r\n    </header>\r\n    );\r\n};\r\n\r\nexport default Nav;","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Cases.tsx",["78"],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Chart.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\Dropdown.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\contexts\\stateContext.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\EmptyChart.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\DateFormatter.tsx",["79"],"/**\r\n * Takes a date in string form as YYYY-MM-DD and converts it to a string form of MM-DD-YYYY.\r\n * \r\n * @param date :string. Date in string form, passed in from user. Must be in Year-Month-Day format. IE: 2021-01-25...\r\n * \r\n * @returns date in MM-DD-YYYY form as string.\r\n * \r\n */\r\n\r\nconst formatDate = (date: string) => {\r\n    //get the year month day\r\n    let year: string = date.substring(0, 4);\r\n    let month: string = date.substring(5, 7);\r\n    let day: string = date.substring(8, 10);\r\n\r\n    //format and return\r\n    return month.concat(\"-\").concat(day).concat(\"-\").concat(year);\r\n}\r\n\r\n/**\r\n * Takes a date in string form as YYYY-MM-DD and converts it to a number form of YYYYMMDD\r\n * @param date :string. Date in string form, passed in from user. Must be in Year-Month-Day format. IE: 2021-01-25...\r\n * @returns date in YYYYMMDD form as number.\r\n */\r\nconst formatDateNumber = (date: string) => {\r\n    //get the year month day\r\n    let year: string = date.substring(0, 4);\r\n    let month: string = date.substring(5, 7);\r\n    let day: string = date.substring(8, 10);\r\n\r\n    //format and return as number\r\n    return +(year.concat(month).concat(day));\r\n}\r\n\r\nexport default {formatDate, formatDateNumber};","D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\NumberFormatter.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\remainderFinder.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\MakeDate.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\CalcTotalCases.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\SelectCases.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\utilities\\CalcPastPercentages.tsx",[],"D:\\Docs\\Programming Side Projects\\covid_active_cases\\covid-active-cases-frontend\\src\\components\\PercentChart.tsx",["80"],"import {Line} from \"react-chartjs-2\";\r\nimport {useState, useMemo} from \"react\";\r\nimport {Percent} from \"../interfaces/percent\";\r\nimport DateFormatter from \"../utilities/DateFormatter\";\r\n\r\n/**\r\n * Takes a Percent[] and displays it in a Line Chart.\r\n * \r\n * Practices using React Functional Components and making sure not too many re renders occur.\r\n * \r\n * @param percents Percents array of type Percent[].\r\n */\r\nconst PercentChart: React.FC<{percents: Percent[]}> = ({children, percents}) => {\r\n\r\n    //get labels and data.\r\n    let dateLabels: string[] = [];\r\n    let percentData: number[] = [];\r\n    let state: string = \"\"; //state abbreviation.\r\n    let color: string = \"rgba(15, 150, 255, 0.4)\"; //color of chart.\r\n\r\n    try {\r\n        percents.forEach(\r\n            (p: Percent) => {\r\n                dateLabels.push(DateFormatter.formatDate(p.submission_date));\r\n                percentData.push(p.percent);\r\n                state = p.state;\r\n            }\r\n        );\r\n    } catch (error) {\r\n        console.log(\"ERROR in PercentChart.tsx: \"+error);\r\n    }\r\n\r\n\r\n    //set default chartData for chart\r\n    const [chartData, setChartData] = useState({\r\n        labels: [\"month-day-year\", \"month-day-year\", \"month-day-year\"],\r\n        datasets: [\r\n            {\r\n                label: 'Past Percentages of Active Cases',\r\n                data: percentData,\r\n                backgroundColor: color,\r\n            }\r\n        ]\r\n    });\r\n\r\n\r\n    //only reget data for chart if state is changed. Prevents too many re-renders from occuring.\r\n    useMemo(() => {\r\n        //make chart with date labels and percentages ONLY if state is selected.\r\n        if (state !== \"\"){\r\n            try {\r\n                setChartData({\r\n                    labels: dateLabels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Past Percentages of Active Cases',\r\n                            data: percentData,\r\n                            backgroundColor: color,\r\n                        }\r\n                    ]\r\n                });\r\n            } catch (error) {\r\n                console.log(\"ERROR in PercentChart.tsx: \"+error);\r\n            }\r\n        }\r\n        \r\n    }, [state, color]);\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <div className=\"chart\">\r\n            <Line\r\n                data={chartData}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                suggestedMax: 1,\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n                height={500}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PercentChart;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":9,"nodeType":"87","endLine":8,"endColumn":73},{"ruleId":"88","severity":1,"message":"89","line":8,"column":52,"nodeType":"90","messageId":"91","endLine":8,"endColumn":72},{"ruleId":"92","severity":1,"message":"93","line":162,"column":8,"nodeType":"94","endLine":162,"endColumn":15,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":35,"column":1,"nodeType":"98","endLine":35,"endColumn":47},{"ruleId":"92","severity":1,"message":"99","line":67,"column":8,"nodeType":"94","endLine":67,"endColumn":22,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'population'. Either include it or remove the dependency array.","ArrayExpression",["103"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useMemo has missing dependencies: 'dateLabels' and 'percentData'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [cases, population]",{"range":"109","text":"110"},"Update the dependencies array to be: [state, dateLabels, percentData, color]",{"range":"111","text":"112"},[6658,6665],"[cases, population]",[2209,2223],"[state, dateLabels, percentData, color]"]